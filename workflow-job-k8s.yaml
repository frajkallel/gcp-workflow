main:
  steps:
    - create_job:
        call: gke.create_job
        args:
            cluster_id: "poc"
            project: "sbx"
            location: "europe-west1"
            namespace: k8s-jobs
            job:
                apiVersion: batch/v1
                kind: Job
                metadata:
                    name: my-job
                spec:
                    template:
                        spec:
                            containers:
                                - name: my-container
                                  image: busybox
                                  command: ["sleep", "10"]
                            restartPolicy: Never
        result: job_details
    - await_job:
        call: gke.await_job
        args:
            cluster_id: "poc"
            project: "sbx"
            location: "europe-west1"
            namespace: k8s-jobs
            job_name: ${job_details.metadata.name}
        result: completed_job
    - log_job_status:
        call: sys.log
        args:
            severity: INFO
            data: '${"Job status: " + completed_job.status.conditions[0].type}'
    - step_condition:
        switch:
            - condition: ${completed_job.status.conditions[0].type == "Complete"}
              next: delete_job
            - condition: ${completed_job.status.conditions[0].type != "Complete"}
              next: end
    - delete_job:
        call: gke.delete_job
        args:
            cluster_id: "poc"
            project: "sbx"
            location: "europe-west1"
            namespace: k8s-jobs
            job_name: ${job_details.metadata.name}
        next: delete_pods

    - delete_pods:
        call: gke.request
        args:
          cluster_id: "poc"
          project: "sbx"
          location: "europe-west1"
          method: "DELETE"
          path: "/api/v1/namespaces/k8s-jobs/pods"
          
